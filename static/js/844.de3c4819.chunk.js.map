{"version":3,"file":"static/js/844.de3c4819.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.jsx","components/constants/api.constants.js","components/services/common-api.service.js","components/Searchbar/Searchbar.styled.js","components/Searchbar/Searchbar.jsx","pages/Movies/Movies.jsx","../node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst MovieList = ({ movies, path }) => {\n  const location = useLocation();\n  const additionalPath = path ? `${path}/` : '';\n\n  return (\n    <ul>\n      {movies.map(({ id, title }) => (\n        <li key={id}>\n          <Link to={`${additionalPath}${id}`} state={{ from: location }}>\n            {title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  path: PropTypes.string,\n};\nexport default MovieList;\n","// export const KEY = '6cf2b1d858796017e56b185acc03bccc';\nexport const KEY = '9068359f92c010fa6a3cf763f10a0606';\n// export const PER_PAGE = 20;\nexport const MEDIA_TYPE = 'movie';\nexport const TIME_WINDOWS = 'day';\nexport const API = 'https://api.themoviedb.org/3';\nexport const API_ACTIONS = { TRENDING: 'trending', SEARCH: 'search' };\nexport const API_IMG_POSTER = 'https://image.tmdb.org/t/p/w500';\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\nimport {\n  KEY,\n  MEDIA_TYPE,\n  TIME_WINDOWS,\n  API,\n  API_ACTIONS,\n} from 'components/constants/api.constants.js';\n\nexport const fetchAPIMovies = async (action, search = '') => {\n  const URLString =\n    action === API_ACTIONS.TRENDING\n      ? `${API}/trending/${MEDIA_TYPE}/${TIME_WINDOWS}?api_key=${KEY}`\n      : `${API}/search/${MEDIA_TYPE}?api_key=${KEY}&query=${search}`;\n\n  try {\n    const resolve = await axios.get(URLString);\n\n    if (resolve.status !== 200 || !resolve) {\n      throw new Error('Service is temporarily unavailable .');\n    }\n    return resolve.data;\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\n\nexport const fetchAPIByID = async movieId => {\n  const URLString = `${API}/movie/${movieId}?api_key=${KEY}`;\n  try {\n    const resolve = await axios.get(URLString);\n\n    if (resolve.status !== 200 || !resolve) {\n      throw new Error('Service is temporarily unavailable .');\n    }\n    return resolve.data;\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\n\nexport const fetchReviewsByID = async movieId => {\n  const URLString = `${API}/movie/${movieId}/reviews?api_key=${KEY}`;\n  try {\n    const resolve = await axios.get(URLString);\n\n    if (resolve.status !== 200 || !resolve) {\n      throw new Error('Service is temporarily unavailable .');\n    }\n    return resolve.data;\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\n\nexport const fetchCastByID = async movieId => {\n  const URLString = `${API}/movie/${movieId}/credits?api_key=${KEY}`;\n  try {\n    const resolve = await axios.get(URLString);\n\n    if (resolve.status !== 200 || !resolve) {\n      throw new Error('Service is temporarily unavailable .');\n    }\n    return resolve.data;\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\n","import styled from 'styled-components';\n\nexport const StyledSearchbar = styled.form`\n  display: flex;\n  width: fit-content;\n  height: fit-content;\n  color: black;\n`;\n\nexport const StyledInput = styled.input`\n  width: 20rem;\n  font-size: 1rem;\n  outline: none;\n`;\n\nexport const StyledSubmitBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0.5rem 1rem;\n  width: fit-content;\n  font-size: 1rem;\n  font-weight: 600;\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  StyledInput,\n  StyledSearchbar,\n  StyledSubmitBtn,\n} from './Searchbar.styled';\n\nconst Searchbar = ({ onSubmit }) => {\n  const [search, setSearch] = useState('');\n\n  const handlerInputChange = evt => {\n    const query = evt?.target.value || '';\n    setSearch(query);\n  };\n\n  const handlerSubmitForm = evt => {\n    evt?.preventDefault();\n    const { value } = evt?.target.elements.search;\n    const query = value || '';\n    onSubmit({ query });\n    setSearch('');\n  };\n\n  return (\n    <StyledSearchbar onSubmit={handlerSubmitForm}>\n      <StyledInput\n        type=\"text\"\n        name=\"search\"\n        autoComplete=\"off\"\n        autoFocus\n        title=\"field for entering search query\"\n        value={search}\n        onChange={handlerInputChange}\n        required\n      />\n      <StyledSubmitBtn type=\"submit\" disabled={!search}>\n        Search\n      </StyledSubmitBtn>\n    </StyledSearchbar>\n  );\n};\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport Searchbar from 'components/Searchbar';\nimport { API_ACTIONS } from 'components/constants/api.constants';\nimport { fetchAPIMovies } from 'components/services/common-api.service';\nimport { toast } from 'react-toastify';\nimport MovieList from 'components/MovieList';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query') ?? '';\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    if (!searchQuery) return;\n\n    fetchAPIMovies(API_ACTIONS.SEARCH, searchQuery).then(({ results }) => {\n      const newMovies =\n        [...results.map(({ id, title }) => ({ id, title }))] ?? [];\n      if (!newMovies.length) toast.info('There is no movies found.');\n      setMovies(newMovies);\n    });\n  }, [searchQuery]);\n\n  return (\n    <>\n      <Searchbar onSubmit={setSearchParams} />\n      {!!movies.length && <MovieList movies={movies} path={''} />}\n    </>\n  );\n};\n\nexport default Movies;\n","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}"],"names":["movies","path","location","useLocation","additionalPath","map","id","title","to","state","from","KEY","MEDIA_TYPE","TIME_WINDOWS","API","API_ACTIONS","TRENDING","SEARCH","API_IMG_POSTER","fetchAPIMovies","action","search","URLString","axios","resolve","status","Error","data","toast","message","fetchAPIByID","movieId","fetchReviewsByID","fetchCastByID","StyledSearchbar","styled","StyledInput","StyledSubmitBtn","onSubmit","useState","setSearch","evt","preventDefault","value","target","elements","query","type","name","autoComplete","autoFocus","onChange","required","disabled","useSearchParams","searchParams","setSearchParams","searchQuery","get","setMovies","useEffect","then","results","newMovies","length","MovieList","_taggedTemplateLiteral","strings","raw","slice","Object","freeze","defineProperties"],"sourceRoot":""}